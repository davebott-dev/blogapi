// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Comment {
  id        String         @id @default(uuid())
  createdAt DateTime       @default(now())
  content   String?
  likes     CommentLikes[]
  post      Post           @relation(fields: [postId], references: [id], onDelete: Cascade)
  author    User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  postId    String
  userId    String
}

model CommentLikes {
  id        String   @id @default(uuid())
  author    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  comment   Comment? @relation(fields: [commentId], references: [id], onDelete: Cascade)
  commentId String?
  userId    String

  @@unique([userId, commentId])
}

model Post {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  title     String    @db.VarChar(255)
  content   String?
  data      String?
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String
  comments  Comment[]
  likes     Likes[]
}

model Likes {
  id     String  @id @default(uuid())
  author User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  Post   Post?   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String?
  userId String

  @@unique([postId, userId])
}

model User {
  id           String         @id @default(uuid())
  email        String         @unique
  name         String?
  username     String         @unique
  password     String
  posts        Post[]
  Profile      Profile[]
  Likes        Likes[]
  Comment      Comment[]
  CommentLikes CommentLikes[]
}

model Profile {
  id      String  @id @default(uuid())
  bio     String?
  picture String? @default("https://e7.pngegg.com/pngimages/84/165/png-clipart-united-states-avatar-organization-information-user-avatar-service-computer-wallpaper-thumbnail.png")
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String  @unique
}
